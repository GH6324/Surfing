#!/system/bin/sh

export PATH="/data/adb/magisk:/data/adb/ksu/bin:/data/adb/ap/bin:$PATH:/data/data/com.termux/files/usr/bin"

EVENT=$1
MONITOR_DIR=$2
MONITOR_FILE=$3

SCRIPTS=$(realpath $0)
SCRIPTS_DIR=$(dirname ${SCRIPTS})

source ${SCRIPTS_DIR}/box.config

PID_DIR="/dev/tmp"
PID_FILE="${PID_DIR}/linkclear.pid"
SLEEP_PID_FILE="${PID_DIR}/linkclear.sleep.pid"
SERVICE_PATH="${SCRIPTS_DIR}/box.service"
TPROXY_PATH="${SCRIPTS_DIR}/box.tproxy"
INOTIFY_SCRIPT="/data/adb/box_bll/scripts/box.inotify"
HOSTS_PATH="/data/adb/box_bll/clash/etc/"
HOSTS_FILE="/data/adb/box_bll/clash/etc/hosts"
SYSTEM_HOSTS="/system/etc/hosts"
mkdir -p "${run_path}"

service_control() {
    if [ ! -f "${box_path}/manual" ] && [ "${MONITOR_FILE}" = "disable" ]; then
        if [ "${EVENT}" = "d" ]; then
            ${SERVICE_PATH} start >> "${run_path}/run.log" 2>> "${run_path}/run_error.log"
            ${TPROXY_PATH} enable >> "${run_path}/run.log" 2>> "${run_path}/run_error.log"
            [ -f "$PID_FILE" ] && kill -9 "$(cat "$PID_FILE")" 2>/dev/null && rm -f "$PID_FILE"
            [ -f "$SLEEP_PID_FILE" ] && kill -9 "$(cat "$SLEEP_PID_FILE")" 2>/dev/null && rm -f "$SLEEP_PID_FILE"
            "${SCRIPTS_DIR}/box.linkclear" >> "${run_path}/run_error.log" 2>&1 &
        elif [ "${EVENT}" = "n" ]; then
            ${TPROXY_PATH} disable >> "${run_path}/run.log" 2>> "${run_path}/run_error.log"
            ${SERVICE_PATH} stop >> "${run_path}/run.log" 2>> "${run_path}/run_error.log"
            [ -f "$PID_FILE" ] && kill -9 "$(cat "$PID_FILE")" 2>/dev/null && rm -f "$PID_FILE"
            [ -f "$SLEEP_PID_FILE" ] && kill -9 "$(cat "$SLEEP_PID_FILE")" 2>/dev/null && rm -f "$SLEEP_PID_FILE"
        fi
    fi
}
service_control

handle_hosts_event() {
    if [ "$MONITOR_FILE" = "hosts" ]; then
        case "$EVENT" in
            m|c|d)
                sleep 1
                umount "$SYSTEM_HOSTS" 2>> "${run_path}/run_error.log"
                mount -o bind "$HOSTS_FILE" "$SYSTEM_HOSTS" 2>> "${run_path}/run_error.log"
                ;;
            *)
                ;;
        esac
    fi
}

handle_inotify_event() {
    if [ ! -d "$HOSTS_PATH" ]; then
        mkdir -p "$HOSTS_PATH"
        while pgrep -f "inotifyd $INOTIFY_SCRIPT $HOSTS_PATH" > /dev/null; do
            pkill -9 -f "inotifyd $INOTIFY_SCRIPT $HOSTS_PATH"
            sleep 1
        done
        inotifyd "$INOTIFY_SCRIPT" "$HOSTS_PATH" >/dev/null 2>&1 &
    fi
}
handle_inotify_event